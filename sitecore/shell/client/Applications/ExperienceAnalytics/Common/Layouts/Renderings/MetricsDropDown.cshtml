@using Sitecore.ExperienceAnalytics.Client
@using Sitecore.ExperienceAnalytics.Client.Mvc
@using Sitecore.ExperienceAnalytics.Client.Mvc.Presentation
@using Sitecore.Mvc
@using Sitecore.Web.UI.Controls.Common.Renderings
@using Sitecore.Web.UI.Controls.Common.Texts
@using Sitecore.Web.UI.Controls.Common.UserControls

@model Sitecore.ExperienceAnalytics.Client.Mvc.Presentation.MetricsDropDownViewModel
@{
    var rendering = Model.Control;
}

@EmbedMetricsDropDownList(rendering)

@helper EmbedMetricsDropDownList(Sitecore.Web.UI.Controls.Common.UserControls.UserControl rendering)
{
var renderingId = rendering.ControlId;
var helper = new RenderingHelper(Html.HtmlHelper(), Model.Control.ControlId);


helper.MakeBorder("ContentWrapper", renderingId + "DropDownWrapper", contentWrapper =>
{

    helper.MakeRow("TextBorder", contentWrapper, true, textBorder => helper.MakeText("Text", textBorder, "Metric", TextType.Title));

    helper.MakeRow("ControlsRow", contentWrapper, true, controlsRow =>
    {
        helper.MakeComboBox("MetricComboBox", controlsRow, Model.Items);
        helper.MakeButton("SubmitButton", controlsRow, Globals.System.Texts.Apply.Guid.ToString(), "Primary");
        helper.MakeButton("ResetButton", controlsRow, Globals.System.Texts.RevertFiltersToStandard.Guid.ToString());
    });
});

// Rendering
<div @rendering.HtmlAttributes>
        @Html.Sitecore().Controls().Rendering(Html.HtmlHelper(), Globals.Bcl.Renderings.Containers.Border, rendering.ControlId + "DropDownWrapper", "", new
   {
       UsePadding = true
   })
    </div>
}

