<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:x="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:exmEnabled="http://www.sitecore.net/xmlconfig/exmEnabled/">
  <sitecore exmEnabled:require="yes" role:require="Standalone or ContentDelivery or Reporting or ContentManagement or Processing or DedicatedDispatch">
    <!-- An cryptographic cipher used for encrypting blocks of text. -->
    <exmAuthenticatedCipher type="Sitecore.Modules.EmailCampaign.Core.Crypto.AuthenticatedAesStringCipher, Sitecore.EmailCampaign" singleInstance="true">
      <param desc="cryptographicKeyName">EXM.CryptographicKey</param>
      <param desc="authenticationKeyName">EXM.AuthenticationKey</param>
      <param desc="logger" ref="exmLogger" />
    </exmAuthenticatedCipher>

    <queryStringEncryption type="Sitecore.Modules.EmailCampaign.Core.Crypto.QueryStringEncryption, Sitecore.EmailCampaign" singleInstance="true">
      <param desc="encryptedContentFieldName" ref="settings/setting[@name='QueryStringKey.ExmEncryptedQuery']/@value" />
      <param desc="cipher" ref="exmAuthenticatedCipher" />
      <fieldNames hint="list:RegisterFieldName">
        <contactId ref="settings/setting[@name='QueryStringKey.AnalyticsContactId']/@value" />
        <contactId ref="settings/setting[@name='QueryStringKey.ContactIdentifierSource']/@value" />
        <contactId ref="settings/setting[@name='QueryStringKey.ContactIdentifierIdentifier']/@value" />
        <messageId ref="settings/setting[@name='QueryStringKey.MessageId']/@value" />
        <redirectUrl ref="settings/setting[@name='QueryStringKey.RedirectUrl']/@value" />
        <targetLanguage ref="settings/setting[@name='QueryStringKey.TargetLanguage']/@value" />
        <testValueIndex ref="settings/setting[@name='QueryStringKey.TestValueIndex']/@value" />
        <emailHistoryEntryId ref="settings/setting[@name='QueryStringKey.EmailHistoryEntryId']/@value" />
      </fieldNames>
    </queryStringEncryption>
      
    <!-- EXM EMAIL REGEX VALIDATOR
         Regex validation for emails
    -->
    <emailRegexValidator type="Sitecore.Modules.EmailCampaign.Validators.RegexValidator, Sitecore.EmailCampaign" singleInstance="true">
      <param desc="regexValue" ref="settings/setting[@name='EXM.EmailValidationRegex']/@value" />
    </emailRegexValidator>

    <!-- EXM FROM EMAIL REGEX VALIDATOR
         Regex validation for 'from email'
    -->
    <fromReplyToEmailRegexValidator type="Sitecore.Modules.EmailCampaign.Validators.RegexValidator, Sitecore.EmailCampaign" singleInstance="true">
      <param desc="regexValue">^[a-zA-Z0-9\+\-_\!\$\%\&amp;\*\?]+(?:\.[a-zA-Z0-9\+\-_\'\!\$\%\&amp;\*\?]+)*@(([a-zA-Z0-9\-]+(?:\.[a-zA-Z0-9]+)+)|(\[\d{1,3}(\.\d{1,3}){3}\]))$</param>
    </fromReplyToEmailRegexValidator>

    <!-- EXM URL REGEX VALIDATOR
         Regex validation for URLs
    -->
    <urlRegexValidator type="Sitecore.Modules.EmailCampaign.Validators.RegexValidator, Sitecore.EmailCampaign" singleInstance="true">
        <param desc="regexValue" ref="settings/setting[@name='EXM.UrlValidationRegex']/@value" />
    </urlRegexValidator>

    <exm>
        <dataProvider type="Sitecore.Modules.EmailCampaign.Core.Data.SqlDbEcmDataProvider, Sitecore.EmailCampaign" resolve="true">
            <!-- Number of retry attempts -->
            <RetryCount>3</RetryCount>            
        </dataProvider>

        <!-- XCONNECT RETRY OPERATION HELPER 
            A helper class that allows a specified operation to be retried a configurable number of times. A linear delay is added between 
            each retry: delay*retryAttempt
                -->
        <xconnectRetry type="Sitecore.EmailCampaign.XConnect.Web.DefaultXConnectRetry, Sitecore.EmailCampaign.XConnect.Web" resolve="true">
            <!-- Delay in milliseconds -->
            <Delay>5000</Delay>
            <!-- Number of retry attempts -->
            <RetryCount>3</RetryCount>
        </xconnectRetry>
        <contactService type="Sitecore.Modules.EmailCampaign.Core.Contacts.ContactService, Sitecore.EmailCampaign" singleInstance="true" resolve="true" />
        <itemUtil type="Sitecore.Modules.EmailCampaign.Core.ItemUtilExt, Sitecore.EmailCampaign" resolve="true" />
        <eventDataService type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.EventDataService, Sitecore.EmailCampaign" singleInstance="true" resolve="true" />
        <messageStateInfoFactory type="Sitecore.Modules.EmailCampaign.Factories.MessageStateInfoFactory, Sitecore.EmailCampaign" resolve="true"/>
        <multiVariateTestStrategyFactory type="Sitecore.Modules.EmailCampaign.Factories.RoundRobinStrategyFactory, Sitecore.EmailCampaign" resolve="true"/>
        <typeResolver type="Sitecore.Modules.EmailCampaign.Core.TypeResolver, Sitecore.EmailCampaign" resolve="true" />
        <typeResolverFactory type="Sitecore.Modules.EmailCampaign.Factories.TypeResolverFactory, Sitecore.EmailCampaign" resolve="true" />
    </exm>

    <pipelines>
      <group groupName="exm.messageEvents">
        <pipelines>
          <!-- TRANSFORM QUERY STRING PIPELINE
                         This pipeline is executed when a message event page is requested. It can be used to
                         reformat the query string prior to the event handling. E.g. decrypting encrypted
                         content, adding support for legacy formats, etc.
                      -->
          <transformQueryString>
            <!-- Decrypts legacy query strings if it is encrypted. -->
            <!--<processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.DecryptLegacyQueryString, Sitecore.EmailCampaign" resolve="true">
                              <param desc="abortIfNotEncrypted">true</param>
                              <param desc="logger" ref="exmLogger" />
                              <whiteListedQueryStringParameters hint="list:AddWhiteListedQueryStringParameter">
                                  <queryStringParameter>ec_url</queryStringParameter>
                              </whiteListedQueryStringParameters>
                            </processor>-->
            <!-- Decrypts the query string if it is encrypted. -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.DecryptQueryString, Sitecore.EmailCampaign">
              <param desc="queryStringEncryption" ref="queryStringEncryption" />
              <param desc="abortIfNotEncrypted">true</param>
            </processor>
            <!-- Marks the query as valid. -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.MarkQueryValid, Sitecore.EmailCampaign" />
          </transformQueryString>
        </pipelines>
      </group>
      <group groupName="exm">
        <pipelines>
          <getContact>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GetContact.GetContact, Sitecore.EmailCampaign" resolve="true" />
          </getContact>
        </pipelines>
      </group>
      <getContentEditorFields>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.RemoveDuplicatedDataSources, Sitecore.EmailCampaign" />
      </getContentEditorFields>

      <httpRequestBegin role:require="Standalone or ContentManagement or DedicatedDispatch or ContentDelivery">
        <processor desc="exmOnHttpRequestBegin" type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HttpRequestBegin.OnHttpRequestBegin, Sitecore.EmailCampaign" x:after="processor[@type='Sitecore.Pipelines.HttpRequest.UserResolver, Sitecore.Kernel']" resolve="true"/>
        <!-- Sets a short session timeout interval on email rendering sessions to conserve resources. -->
        <processor desc="exmSetEmailRenderSessionTimeout" type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HttpRequestBegin.SetEmailRenderSessionTimeout, Sitecore.EmailCampaign" x:after="processor[@desc='exmOnHttpRequestBegin']">
          <Timeout>1</Timeout>
        </processor>
        <!-- For email rendering sessions having a Sitecore user as the recipient this processor loads the user and assigns it to the session. -->
        <processor desc="exmLoadEmailRenderSessionUser" type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HttpRequestBegin.LoadEmailRenderSessionUser, Sitecore.EmailCampaign" x:after="processor[@desc='exmSetEmailRenderSessionTimeout']" />
      </httpRequestBegin>

      <renderField>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GetNewsletterLinkFieldValue, Sitecore.EmailCampaign" x:after="processor[@type='Sitecore.Pipelines.RenderField.GetInternalLinkFieldValue, Sitecore.Kernel']" />
      </renderField>

      <modifyHyperlink>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.SkipAnchorLinks, Sitecore.EmailCampaign" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.SetServerUrl, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.SkipAlreadyProcessedHyperlink, Sitecore.EmailCampaign">
          <RedirectPagePath>/sitecore%20modules/Web/EXM/RedirectUrlPage.aspx</RedirectPagePath>
        </processor>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.MapHostname, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.SetAnalyticsQueryStringParameters, Sitecore.EmailCampaign" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.HandleInternalLink, Sitecore.EmailCampaign" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.GeneratePreviewLink, Sitecore.EmailCampaign" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.GenerateHyperlink, Sitecore.EmailCampaign">
          <RedirectPagePath>/sitecore%20modules/Web/EXM/RedirectUrlPage.aspx</RedirectPagePath>
          <UrlQueryKey ref="settings/setting[@name='QueryStringKey.RedirectUrl']/@value" />
        </processor>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.Hyperlink.EncryptQueryString, Sitecore.EmailCampaign">
          <param desc="queryStringEncryption" ref="queryStringEncryption" />
        </processor>
      </modifyHyperlink>

      <modifyImageLink>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.SetServerUrl, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.MapHostname, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.GeneratePreviewLink, Sitecore.EmailCampaign" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.GenerateLink.ImageLink.GenerateImageLink, Sitecore.EmailCampaign" />
      </modifyImageLink>
    </pipelines>

    <recipients>
      <recipientRepository type="Sitecore.Modules.EmailCampaign.Recipients.MultiRecipientRepository, Sitecore.EmailCampaign" singleInstance="true">
        <Repositories hint="list:AddRepository">
          <xdbContacts type="Sitecore.Modules.EmailCampaign.Xdb.XdbRecipientRepository, Sitecore.EmailCampaign" singleInstance="true" />
        </Repositories>
      </recipientRepository>

      <recipientPropertyTokenMap type="Sitecore.Modules.EmailCampaign.Core.Personalization.DefaultRecipientPropertyTokenMap, Sitecore.EmailCampaign" singleInstance="true" />
    </recipients>

    <xslExtensions>
      <extension mode="on" type="Sitecore.Modules.EmailCampaign.Core.Extensions.XslUtil, Sitecore.EmailCampaign" namespace="http://www.sitecore.net/ecm" singleInstance="true" />
    </xslExtensions>

    <services>
      <!-- Configurator used by EXM to register required services -->
      <configurator type= "Sitecore.Modules.EmailCampaign.DependencyInjection.CustomServiceConfigurator, Sitecore.EmailCampaign"/>
    </services>  
      
    <sites>
      <site name="exm" inherits="shell" virtualFolder="/" physicalFolder="/" startItem="/none" cacheHtml="true" htmlCacheSize="50MB" />
    </sites>
      
    <settings>
      <!-- Sets whether EXM is enabled -->
      <setting name="EXM.Enabled" value="true" />
        
      <!-- The private key for legacy data encrypting/decrypting. -->
      <setting name="PrivateKey" value="" />

      <!-- The name of UserAgent that will be used to request pages for rendering emails in the dispatch process. -->
      <setting name="DispatchUserAgent" value="ECM Dispatch" />

      <!-- The key name of the flag in a session's custom data storage used for marking it as an email click session. -->
      <setting name="EmailClickSessionKey" value="EXMClickedThroughSession" />

      <!-- The name of the web site for EXM events that are not associated with a specific web site. E.g. message sent, message undelivered, spam complaint received. -->
      <setting name="EXM.DefaultEventSiteName" value="exm" />

      <!-- The maximum number of messages (or message related campaigns, tests, etc.) to create in a single folder. -->
      <setting name="MaxMessageFolderSize" value="50" />

      <!-- Specifies the property name of a user profile, which will be used as a Contact phone number. -->
      <setting name="PhoneFieldName" value="phone" />

      <!-- Specifies the property name of a user profile, which will be used as a Contact preferred language. -->
      <setting name="LanguageFieldName" value="" />

      <!-- The user name to log in with if anonymous access is disabled. -->
      <setting name="IIS.User" value="" />

      <!-- The password to log in with if anonymous access is disabled. -->
      <setting name="IIS.Password" value="" />

      <!-- The path to the handler which should process email open events. -->
      <setting name="EXM.OpenHandlerPath" value="/sitecore%20modules/Web/EXM/RegisterEmailOpened.ashx" />

      <!-- Specifies the key for the contact identifier source on the query string. -->
      <setting name="QueryStringKey.ContactIdentifierSource" value="ex_id_s" />

      <!-- Specifies the key for the contact identifier identifier on the query string. -->
      <setting name="QueryStringKey.ContactIdentifierIdentifier" value="ex_id_i" />

        <!-- Specifies the key for identifying email campaign on the query string. Legacy, used to handle links sent by previous ECM versions. -->
      <setting name="QueryStringKey.Campaign" value="ec_camp" />

      <!-- Specifies the key for identifying contact on the query string. -->
      <setting name="QueryStringKey.AnalyticsContactId" value="ec_contact_id" />

      <!-- Specifies the key for identifying the target URL in a redirect request. -->
      <setting name="QueryStringKey.RedirectUrl" value="ec_url" />

      <!-- The key is used to identify page requests of the module. -->
      <setting name="QueryStringKey.EcmId" value="ec_id" />

      <!-- The key is used to identify page requests of the module. -->
      <setting name="QueryStringKey.ExmEncryptedQuery" value="ec_eq" />

      <!-- Specifies the key for setting the context user of a web page renderd as a message body. -->
      <setting name="QueryStringKey.Recipient" value="ec_recipient" />

      <!-- Specifies the key for confirming subscriptions from emails. -->
      <setting name="QueryStringKey.Subscription" value="ec_subscr" />

      <!-- Specifies the key for identifying message on the query string. -->
      <setting name="QueryStringKey.MessageId" value="ec_message_id" />

      <!-- Specifies the key for identifying the target language in the query string. -->
      <setting name="QueryStringKey.TargetLanguage" value="ec_lang" />

      <!-- Specifies the key for identifying the test value index in the query string. -->
      <setting name="QueryStringKey.TestValueIndex" value="ec_tvi" />

      <!-- The key which should be used for online versions of emails.  -->
      <setting name="QueryStringKey.OnlineVersionQueryStringKey" value="sc_pd_view" />

      <!-- Specifies the key for identifying the email history entry id in the query string. -->
      <setting name="QueryStringKey.EmailHistoryEntryId" value="ec_emailid" />
        
      <!-- The Channel Id associated with the campaign. -->
      <setting name="CampaignClassification.Channel" value="{DDAFB85B-1511-48B8-9374-2A8A1F371645}" />

      <!-- The regular expression used for e-mail validation. -->
      <setting name="EXM.EmailValidationRegex" value="^[\p{L}0-9\+\-_\!\$\%\&amp;\*\?]+(?:\.[\p{L}0-9\+\-_\'\!\$\%\&amp;\*\?]+)*@(([\p{L}0-9\-]+(?:\.[\p{L}0-9]+)+)|(\[\d{1,3}(\.\d{1,3}){3}\]))$" />

      <!-- The regular expression used for url validation. -->
      <setting name="EXM.UrlValidationRegex" value="^(http|https){1}\:\/\/(([a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]?)\.)*([a-zA-Z0-9][A-Za-z0-9\-]{0,61}[A-Za-z0-9]?)(:\d{2,5})?(\/[a-zA-Z0-9][A-Za-z0-9\-]{0,61}[A-Za-z0-9]?)*(\/{1})?$" />

      <!--The host name that is used to download the message source when a message is being previewed and/or dispatched to recipients -->
      <setting name="EXM.RendererUrl" value="" />

      <!-- The size of the message body cache. -->
      <setting name="EXM.MessageBodyMaxCacheSize" value="5MB" />

      <!-- Specifies if Context.ContentLanguage.Name should be used for the Marketing Operations API-->
      <setting name="EXM.UseContextContentLanguage" value="false" />

      <!-- Specifies if PII sensitive data should be logged by EXM -->
      <setting name="EXM.IncludePIIinLogFiles" value="false" />

      <!-- Value in seconds in which two email events (e.g. opens and clicks) related to the same message and contact are considered duplicates. 
            Within this interval only the first registration will be stored. -->
      <setting name="EXM.DuplicateProtectionInterval" value="300" />
    </settings>

    <log4net>
      <logger name="Sitecore.EXM" additivity="false">
        <level value="INFO" />
        <appender-ref ref="ExmLogFileAppender" />
      </logger>
      <appender name="ExmLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
        <file value="$(dataFolder)/logs/Exm.log.{date}.txt" />
        <appendToFile value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
        </layout>
        <encoding value="utf-8" />
      </appender>
    </log4net>
  </sitecore>
</configuration>