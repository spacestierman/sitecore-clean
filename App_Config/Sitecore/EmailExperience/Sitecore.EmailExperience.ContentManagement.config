<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:x="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:exmEnabled="http://www.sitecore.net/xmlconfig/exmEnabled/">
  <sitecore exmEnabled:require="yes" role:require="Standalone or ContentManagement or DedicatedDispatch">
    <exm>
      <recipientValidator type="Sitecore.Modules.EmailCampaign.Core.Dispatch.RecipientValidator, Sitecore.EmailCampaign">
          <param desc="emailRegexValidator" ref="emailRegexValidator" />
          <param desc="suppressionManager" ref="exm/eds/suppressionManager" />
      </recipientValidator>

      <dispatchManager type="Sitecore.EmailCampaign.Cm.Dispatch.DispatchManager, Sitecore.EmailCampaign.Cm" resolve="true"/>
      
      <subscriptionManager type="Sitecore.EmailCampaign.Cm.SubscriptionManager, Sitecore.EmailCampaign.Cm" resolve="true"/>

      <dispatchTask type="Sitecore.EmailCampaign.Cm.Dispatch.DispatchTask, Sitecore.EmailCampaign.Cm">
        <param ref="exm/dispatchFailedTaskPool"/>
        <param desc="recipientValidator" ref="exm/recipientValidator" />
        <param desc="contactService" ref="exm/contactService" />
        <param desc="dataProvider" ref="exm/dataProvider" />
        <param desc="itemUtil" ref="exm/itemUtil" />
        <param desc="eventDataService" ref="exm/eventDataService" />
        <param desc="dispatchManager" ref="exm/dispatchManager" />
        <param desc="emailAddressHistoryManager" ref="exm/emailAddressHistoryManager" />
        <param desc="recipientManagerFactory" ref="exm/recipientManagerFactory" />
        <param desc="sentHistoryManager" ref="exm/sentHistoryManager" />
      </dispatchTask>

      <recipientManagerFactory type="Sitecore.Modules.EmailCampaign.Factories.RecipientManagerFactory, Sitecore.EmailCampaign" resolve="true"/>
      <sendingManagerFactory type="Sitecore.EmailCampaign.Cm.Factories.AsyncSendingManagerFactory, Sitecore.EmailCampaign.Cm" resolve="true"/>
      <notificationFactory type="Sitecore.EmailCampaign.Cm.Factories.NotificationFactory, Sitecore.EmailCampaign.Cm" resolve="true"/>
      <messageTaskFactory type="Sitecore.EmailCampaign.Cm.Factories.MessageTaskFactory, Sitecore.EmailCampaign.Cm" resolve="true"/>
      <sendingProcessDataFactory type="Sitecore.Modules.EmailCampaign.Factories.SendingProcessDataFactory, Sitecore.EmailCampaign" resolve="true"/>
      
      <messageInfoFactory type="Sitecore.EmailCampaign.Cm.Factories.MessageInfoFactory, Sitecore.EmailCampaign.Cm" resolve="true"/>
        
      <deferralStrategy type="Sitecore.EmailCampaign.Cm.MessagingStrategies.ExmDeferDetection, Sitecore.EmailCampaign.Cm" resolve="true" />
        
      <deferralSchedulerSettings type="Sitecore.EmailCampaign.Cm.MessagingStrategies.ExponentialDeferralSchedulerSettings, Sitecore.EmailCampaign.Cm">
          <param desc="maxDeferralAttempts">5</param>
          <param desc="minBackoff">00:05:00</param>
          <param desc="maxBackoff">01:00:00</param>
          <param desc="deltaBackoff">00:05:00</param>
      </deferralSchedulerSettings>

      <emailAddressHistoryManager type="Sitecore.EmailCampaign.Cm.Managers.DefaultEmailAddressHistoryManager, Sitecore.EmailCampaign.Cm" resolve="true" />
      <sentHistoryManager type="Sitecore.EmailCampaign.Cm.Managers.DefaultSentMessageManager, Sitecore.EmailCampaign.Cm" resolve="true" />
    </exm>

    <events>
      <event name="item:added">
        <handler type="Sitecore.Modules.EmailCampaign.Core.ItemEventHandler, Sitecore.EmailCampaign" method="OnItemAdded" resolve="true" />
      </event>

      <event name="item:copied">
        <handler type="Sitecore.Modules.EmailCampaign.Core.ItemEventHandler, Sitecore.EmailCampaign" method="OnMessageCopied" resolve="true" />
      </event>

      <event name="item:created">
        <handler type="Sitecore.Modules.EmailCampaign.Core.RootItemEventHandler, Sitecore.EmailCampaign" method="OnRootCreated" resolve="true" />
      </event>

      <event name="item:deleted">
        <handler type="Sitecore.Modules.EmailCampaign.Core.RootItemEventHandler, Sitecore.EmailCampaign" method="OnRootDeleted" resolve="true" />
        <handler type="Sitecore.Modules.EmailCampaign.Core.ItemEventHandler, Sitecore.EmailCampaign" method="OnItemDeleted" resolve="true" />
      </event>

      <event name="subscriber:assigned" />
    </events>

    <pipelines>
        <group groupName="exm.messageEvents">
            <pipelines>
                <!-- EMAIL OPENED PIPELINE
                          This pipeline is executed when Email Experience Manager processes a email opened task.
                          The pipeline creates an interaction with a "Email Opened" and a "Email Opened First Time" page event
                          The pipeline will be aborted if:
                          - The message item cannot be found
                          - The campaign cannot be found
                      -->
                <emailOpened>
                    <!-- Gets the message item -->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
                    <!-- Gets the contact id-->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetContact, Sitecore.EmailCampaign" resolve="true">
                        <!-- Delay in milliseconds -->
                        <Delay>500</Delay>
                        <!-- Number of retry attempts -->
                        <RetryCount>3</RetryCount>
                    </processor>
                    <!-- Registers the Email Opened page event -->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.RegisterMessageEvent, Sitecore.EmailCampaign" />
                    <!-- Identifies the campaign associated with the message -->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.IdentifyCampaign, Sitecore.EmailCampaign" resolve="true">
                        <AddCampaignToInteraction>false</AddCampaignToInteraction>
                    </processor>
                    <!-- Resets the bounce contact for the preferred email address of the contact -->
                    <processor type="Sitecore.EmailCampaign.Cm.Pipelines.EmailOpened.ResetContactEmailBounceCount, Sitecore.EmailCampaign.Cm" resolve="true">
                        <!-- Delay in milliseconds -->
                        <Delay>500</Delay>
                        <!-- Number of retry attempts -->
                        <RetryCount>3</RetryCount>
                    </processor>
                    <!-- Gets the channel id from the campaign -->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetChannelId, Sitecore.EmailCampaign" resolve="true" />
                    <!-- Create the interaction -->
                    <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.CreateInteraction, Sitecore.EmailCampaign" resolve="true">
                        <!-- Delay in milliseconds -->
                        <Delay>500</Delay>
                        <!-- Number of retry attempts -->
                        <RetryCount>3</RetryCount>
                    </processor>
                    <!-- Saves the touch point record to the interaction registry -->
                    <processor type="Sitecore.EmailCampaign.Cm.Pipelines.EmailOpened.SaveInteraction, Sitecore.EmailCampaign.Cm" resolve="true">
                        <!-- Delay in milliseconds -->
                        <Delay>500</Delay>
                        <!-- Number of retry attempts -->
                        <RetryCount>3</RetryCount>
                    </processor>                        
                </emailOpened>
            </pipelines>
        </group>
        <!-- RECIPIENT LIST MANAGEMENT PIPELINE
           This pipeline is executed when a recipient list management task from the recipientListManagementTaskPool task pool is processed.
           The pipeline is executed for each task individually and adds the corresponding contact to the global opt out list.
         -->
        <exm.recipientListManagement.add>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.RecipientListManagement.AddToGlobalOptOutList, Sitecore.EmailCampaign.Cm"  resolve="true" />
        </exm.recipientListManagement.add>
        <!-- RECIPIENT LIST MANAGEMENT PIPELINE
           This pipeline is executed when a recipient list management task from the recipientListManagementTaskPool task pool is processed.
           The pipeline is executed for each task individually and removes the contact from any include lists on the message.
         -->
        <exm.recipientListManagement.remove>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.RecipientListManagement.RemoveFromIncludeList, Sitecore.EmailCampaign.Cm" resolve="true">
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
        </exm.recipientListManagement.remove>

        <!-- HANDLE UNDELIVERED MESSAGE PIPELINE
               This pipeline is executed when a bounced message task from the bounced messages task pool is processed.
               The pipeline is executed for each task individually and updates the number of undelivered emails on the 
               recipient's profile.
               Furthermore an interaction is created with a "Email Bounced" page event in xDB.
          -->
        <handleUndeliveredMessage>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.UpdateUndeliveredCount, Sitecore.EmailCampaign.Cm" resolve="true">
                <FacetName ref="model/entities/contact/facets/facet[@name='Emails']/@name" />
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.RegisterMessageEvent, Sitecore.EmailCampaign"/>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.IdentifyCampaign, Sitecore.EmailCampaign" resolve="true">
                <AddCampaignToInteraction>false</AddCampaignToInteraction>
            </processor>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetChannelId, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.CreateInteraction, Sitecore.EmailCampaign" resolve="true">
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SaveInteraction, Sitecore.EmailCampaign" resolve="true" >
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
        </handleUndeliveredMessage>

        <!-- HANDLE SPAM COMPLAINT PIPELINE
           This pipeline is executed when a spam complaint task from the spam complaints task pool is processed.
           An interaction is created with a "Email Spam Reported" page event in xDB.
      -->
        <handleSpamComplaint>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.RegisterMessageEvent, Sitecore.EmailCampaign"/>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.IdentifyCampaign, Sitecore.EmailCampaign" resolve="true">
                <AddCampaignToInteraction>false</AddCampaignToInteraction>
            </processor>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetChannelId, Sitecore.EmailCampaign" resolve="true" />
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.CreateInteraction, Sitecore.EmailCampaign" resolve="true" >
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SaveInteraction, Sitecore.EmailCampaign" resolve="true" >
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
        </handleSpamComplaint>

        <!-- HANDLE SENT MESSAGE PIPELINE
           This pipeline is executed when a sent message task from the sent messages task pool is processed.
           An interaction is created with a "Email Sent" page event in xDB.
      -->
        <handleSentMessage>
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.HandleSentMessage.GetMessage, Sitecore.EmailCampaign.Cm" resolve="true" />
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.HandleSentMessage.RegisterMessageEvent, Sitecore.EmailCampaign.Cm"/>
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.HandleSentMessage.IdentifyCampaign, Sitecore.EmailCampaign.Cm" resolve="true">
                <AddCampaignToInteraction>false</AddCampaignToInteraction>
            </processor>
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.HandleSentMessage.CreateInteractions, Sitecore.EmailCampaign.Cm" resolve="true" />
            <processor type="Sitecore.EmailCampaign.Cm.Pipelines.HandleSentMessage.SaveInteractions, Sitecore.EmailCampaign.Cm" resolve="true" >
                <!-- Delay in milliseconds -->
                <Delay>500</Delay>
                <!-- Number of retry attempts -->
                <RetryCount>3</RetryCount>
            </processor>
        </handleSentMessage>

      <!-- SEND EMAIL PIPELINE
           This pipeline dispatches a single email through the SMTP server.
      -->
      <SendEmail>
        <processor type="Sitecore.EmailCampaign.Cm.Pipelines.SendEmail.FillEmail, Sitecore.EmailCampaign.Cm" resolve="true" />
        <processor type="Sitecore.EmailCampaign.Cm.Pipelines.SendEmail.SendEmail, Sitecore.EmailCampaign.Cm" resolve="true" />
        <processor type="Sitecore.EmailCampaign.Cm.Pipelines.SendEmail.Sleep, Sitecore.EmailCampaign.Cm">
              <!-- Number of milliseconds to put the thread to sleep for after an email has been sent. -->
              <param desc="sleep">50</param>
          </processor>
      </SendEmail>

      <!-- HANDLE DISPATCH FAILED PIPELINE
           This pipeline is executed when a dispatch failed task from the dispatch failed task pool is processed.
           An interaction is created with a "Dispatch Failed" page event in xDB.
      -->
      <handleDispatchFailed>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.EmailCampaign.Cm.Pipelines.UpdateUndeliveredCount, Sitecore.EmailCampaign.Cm" resolve="true">
            <FacetName ref="model/entities/contact/facets/facet[@name='Emails']/@name" />
            <!-- Delay in milliseconds -->
            <Delay>500</Delay>
            <!-- Number of retry attempts -->
            <RetryCount>3</RetryCount>
        </processor>
         <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.RegisterMessageEvent, Sitecore.EmailCampaign"/>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.IdentifyCampaign, Sitecore.EmailCampaign" resolve="true">
            <AddCampaignToInteraction>false</AddCampaignToInteraction>
        </processor>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetChannelId, Sitecore.EmailCampaign" resolve="true" />
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.CreateInteraction, Sitecore.EmailCampaign" resolve="true" >
            <!-- Delay in milliseconds -->
            <Delay>500</Delay>
            <!-- Number of retry attempts -->
            <RetryCount>3</RetryCount>
        </processor>
        <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SaveInteraction, Sitecore.EmailCampaign" resolve="true" >
            <!-- Delay in milliseconds -->
            <Delay>500</Delay>
            <!-- Number of retry attempts -->
            <RetryCount>3</RetryCount>
        </processor>
      </handleDispatchFailed>

      <httpRequestBegin>
      </httpRequestBegin>
    </pipelines>
    
    <contentSearch>
      <configuration>
        <indexes>
          <index id="sitecore_suggested_test_index">
            <configuration>
              <documentOptions>
                <exclude hint="list:AddExcludedTemplate">
                  <!-- Excludes EXM AB test templates from the Content Testing Suggested Tests list -->
                  <emailTestDefinition>{EEF917FF-1FCD-498F-96C5-A2ED3F31A375}</emailTestDefinition>
                  <abTestMessage>{078D8A76-F971-4891-B422-76C0BCF9FA03}</abTestMessage>
                  <htmlMessage>{3F2D20A6-5554-459A-8377-0DB96FF90BC3}</htmlMessage>
                  <mailMessage>{A0EA9681-5C86-43AB-80F7-C522DADF6F12}</mailMessage>
                  <plainTextMessage>{1AFE38A7-9461-4278-ADAF-D807F27F36E4}</plainTextMessage>
                  <baseHtmlMessage>{B5598E34-0BC7-438F-9F34-4135E2069792}</baseHtmlMessage>
                  <simpleHtmlMessage>{ECF0A9C8-FE56-45D8-B750-6BDE3A34A532}</simpleHtmlMessage>
                  <existingPageMessage>{A89CF30C-EDFA-442E-8048-9234980E2176}</existingPageMessage>
                  <newsletterRoot>{3F12D78C-B7B7-4157-98FC-DA3322EE1A5B}</newsletterRoot>
                </exclude>
              </documentOptions>
            </configuration>
          </index>
        </indexes>
      </configuration>
    </contentSearch>

    <experienceAnalytics>
      <abTestReportingClient type="Sitecore.EmailCampaign.ExperienceAnalytics.Reporting.AbTestReportingClient, Sitecore.EmailCampaign.ExperienceAnalytics" singleInstance="true"/>
      <landingPageReportingClient type="Sitecore.EmailCampaign.ExperienceAnalytics.Reporting.LandingPageReportingClient, Sitecore.EmailCampaign.ExperienceAnalytics" singleInstance="true"/>
      <timeOfDayReportingClient type="Sitecore.EmailCampaign.ExperienceAnalytics.Reporting.TimeOfDayReportingClient, Sitecore.EmailCampaign.ExperienceAnalytics" singleInstance="true">
        <param desc="logger" ref="exmLogger" />
        <param desc="service" ref="experienceAnalytics/api/services/reportingService"/>
        <param desc="dateTimeFormatter" ref="exm/dateTimeFormatter"/>
      </timeOfDayReportingClient>
    </experienceAnalytics>

    <settings>        
      <!-- The number of threads that you can use for sending messages. -->
      <setting name="NumberThreads" value="10" />

      <!-- Specifies how many sending threads can generate messages at the same time.
           Value should be no less than 1.
           Default value: Environment.ProcessorCount * 2 -->
      <setting name="MaxGenerationThreads" value="" />

      <!-- The number of recipients in each batch enqueued in the dispatch queue. -->
      <setting name="DispatchEnqueueBatchSize" value="300" />

      <!-- The number of threads that adds recipient batches to dispatch queue. -->
      <setting name="DispatchEnqueueThreadsNumber" value="4" />
        
      <!-- The number of contacts that each dispatch thread will attempt to process at a time. -->
      <setting name="EXM.DispatchBatchSize" value="100" />        

      <!-- Specifies whether the message sending process is emulated without actual message transmission via MTA. -->
      <setting name="MtaEmulation.Active" value="false" />

      <!-- The minimum amount of time to emulate a single sending (milliseconds). -->
      <setting name="MtaEmulation.MinSendTime" value="200" />

      <!-- The maximum amount of time to emulate a single sending (milliseconds). -->
      <setting name="MtaEmulation.MaxSendTime" value="400" />

      <!-- The probability of a connection fail (%).-->
      <setting name="MtaEmulation.FailProbability" value="0.01" />

      <!-- The period of time (in seconds) after which the module considers automated message failed. -->
      <setting name="ResetTimeout" value="3600" />

      <!-- Specifies the name of the default global opt-out contact list. -->
      <setting name="StandardMessages.DefaultGlobalOptOutList" value="Common Global Opt-out" />

      <!-- Specifies the path of the Subscription Confirmation message used by the self-service subscription control. -->
      <setting name="StandardMessages.SubscriptionConfirmation" value="Service Messages/Self-Service Subscription/Subscription Confirmation" />

      <!-- Specifies the path of the Subscription Notification message used by the self-service subscription control. -->
      <setting name="StandardMessages.SubscriptionNotification" value="Service Messages/Self-Service Subscription/Subscription Notification" />

      <!-- Specifies the path of the Unsubscribe Notification message used by the self-service subscription control. -->
      <setting name="StandardMessages.UnsubscribeNotification" value="Service Messages/Self-Service Subscription/Unsubscribe Notification" />

      <!-- Specifies the path of the Dispatch Completed status message. -->
      <setting name="StandardMessages.DispatchCompleted" value="Service Messages/Status Messages/Dispatch Completed" />

      <!-- Specifies the path of the Triggered Activation status message. -->
      <setting name="StandardMessages.TriggeredNotification" value="Service Messages/Status Messages/Automated Notification" />

      <!-- The total allowed size in bytes of all attachments for a message. -->
      <setting name="EXM.AttachmentTotalSizeInBytes" value="7340032" />

      <!-- Check if recipient lists have pending operations before dispatch. -->
      <setting name="EXM.CheckRecipientListsStatus" value="true" />

      <!-- Specifies the path of the 'EXM' tasks. -->
      <setting name="EXM.TasksPath" value="/sitecore/system/Settings/Email/Tasks" />

      <!-- Specifies the path of the Email Test Definition. -->
      <setting name="EXM.EmailTestDefinitionPath" value="/sitecore/system/Marketing Control Panel/Test Lab/Emails" />

      <!-- Specifies whether the MTA connection should be tested before attempting starting a dispatch -->
      <setting name="EXM.CheckMtaConnection" value="true" />
        
      <!-- Specifies whether the Email Cloud suppression list is checked during dispatch. A contact will never receive an email if they are on the 
      suppression list, as the Email Cloud will skip sending to the contact, even if this check is disabled, so this check is only made to avoid sending 
      an email to the Email Cloud. -->
      <setting name="EXM.CheckSuppressionList" value="true" />        
    </settings>
    <services>
      <register lifetime="Singleton"
          serviceType="Sitecore.ExM.Framework.Formatters.IDateTimeFormatter, Sitecore.ExM.Framework"
          implementationType="Sitecore.ExM.Framework.Formatters.DateTimeFormatter, Sitecore.ExM.Framework" />

        <register lifetime="Singleton"
          serviceType="Sitecore.EmailCampaign.Server.Model.SortParameterFactory, Sitecore.EmailCampaign.Server"
          implementationType="Sitecore.EmailCampaign.Server.Model.SortParameterFactory, Sitecore.EmailCampaign.Server" />
        
      <!-- Configurator used by EXM to register required services -->
      <configurator type= "Sitecore.EmailCampaign.Cm.DependencyInjection.CustomServiceConfigurator, Sitecore.EmailCampaign.Cm"/>
    </services>
    <marketingAutomation>
      <pluginDescriptorsRepository>
        <plugins>
          <plugin path="./plugins/EXM/plugin.js" />
        </plugins>
      </pluginDescriptorsRepository>
    </marketingAutomation>
  </sitecore>
</configuration>