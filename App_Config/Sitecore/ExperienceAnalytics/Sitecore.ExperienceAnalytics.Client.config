<!--

Purpose: This file enables the components and features related to Experience Analytics client features.

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
    <sitecore role:require="Standalone or ContentManagement">
        <experienceAnalytics>
            <client>
                <logger type="Sitecore.ExperienceAnalytics.Core.Diagnostics.Logger, Sitecore.ExperienceAnalytics.Core"
                        singleInstance="true" />

                <services>
                    <!-- AggregationSegmentReader is responsible for reading aggregation segments from refernece data store.
          -->
                    <aggregationSegmentReader
                        type="Sitecore.ExperienceAnalytics.Aggregation.Repositories.AggregationSegmentReader, Sitecore.ExperienceAnalytics.Aggregation">
                        <param desc="logger" ref="experienceAnalytics/client/logger" />
                        <param desc="segmentDefinitionReader"
                               ref="experienceAnalytics/client/services/segmentDefinitionReader" />
                    </aggregationSegmentReader>

                    <!-- SegmentDefinitionReader is responsible for reading segment definitions from reference data store.-->
                    <segmentDefinitionReader type="Sitecore.ExperienceAnalytics.Core.Repositories.ReferenceData.ReferenceDataSegmentReader, Sitecore.ExperienceAnalytics.Core" />

                    <!-- SegmentReader is responsible for reading segment items from master database.-->
                    <segmentReader type="Sitecore.ExperienceAnalytics.Client.Deployment.SegmentItemReader, Sitecore.ExperienceAnalytics.Client">
                        <param ref="experienceAnalytics/client/logger" />
                    </segmentReader>

                    <!-- [OBSOLETE] - Use siteReader node instead.
               SiteDefinitionService is responsible for reading data from the SiteNames dimension table in RDB.
               The 'connectionStringName' parameter the name of the connection string of the RDB instance to connect to.
               Default: "reporting"
          -->
                    <siteDefinitionService
                        type="Sitecore.ExperienceAnalytics.Core.Repositories.SiteFilter.SiteDefinitionServiceFilterDecorator, Sitecore.ExperienceAnalytics.Core">
                        <param
                            type="Sitecore.ExperienceAnalytics.Core.Repositories.DataProviderSiteDefinitionService, Sitecore.ExperienceAnalytics.Core">
                            <param
                                type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client"
                                factoryMethod="GetLazyReportingDataProvider" />
                            <param desc="reportingDataSourceName">reporting</param>
                        </param>
                        <filters hint="list:AddFilter">
                        </filters>
                    </siteDefinitionService>

                    <!-- SiteReader is responsible for reading data from the SiteNames dimension table in RDB.
               The 'connectionStringName' parameter the name of the connection string of the RDB instance to connect to.
               Default: "reporting"
          -->
                    <siteReader
                        type="Sitecore.ExperienceAnalytics.Core.Repositories.SiteFilter.FilterReaderDecorator`2[[System.String], [Sitecore.ExperienceAnalytics.Core.Repositories.Model.Site, Sitecore.ExperienceAnalytics.Core]], Sitecore.ExperienceAnalytics.Core">
                        <param
                            type="Sitecore.ExperienceAnalytics.Core.Repositories.CachedReaderDecorator`2[[System.String], [Sitecore.ExperienceAnalytics.Core.Repositories.Model.Site, Sitecore.ExperienceAnalytics.Core]], Sitecore.ExperienceAnalytics.Core">
                            <param
                                type="Sitecore.ExperienceAnalytics.Core.Repositories.SiteRemoteReader, Sitecore.ExperienceAnalytics.Core">
                                <param
                                    type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client"
                                    factoryMethod="GetLazyReportingDataProvider" />
                                <param desc="reportingDataSourceName">reporting</param>
                            </param>
                            <param desc="cacheName">ExperienceAnalytics.Sites</param>
                            <param desc="cacheMaxSize">1048576</param>
                            <param desc="cacheExpiration">00:05:00</param>
                            <param desc="useSlidingCacheExpiration">false</param>
                            <param desc="logger" ref="experienceAnalytics/client/logger" />
                        </param>
                        <filters hint="list:AddFilter">
                        </filters>
                    </siteReader>

                    <requestRedirection
                        type="Sitecore.ExperienceAnalytics.Client.Pipelines.HttpRequest.RequestRedirection, Sitecore.ExperienceAnalytics.Client">
                        <param
                            type="Sitecore.ExperienceAnalytics.Core.Adapters.XDbSettingsAdapter, Sitecore.ExperienceAnalytics.Core" />
                        <param ref="experienceAnalytics/client/logger" />
                    </requestRedirection>

                    <encoder
                        type="Sitecore.ExperienceAnalytics.Api.Encoding.Hash64Encoder, Sitecore.ExperienceAnalytics.Api" />
                    <keyCodec
                        type="Sitecore.ExperienceAnalytics.Api.Encoding.HashKeysCodec, Sitecore.ExperienceAnalytics.Api">
                        <param desc="encoder" ref="experienceAnalytics/client/services/encoder" />
                        <param desc="decoder"
                               type="Sitecore.ExperienceAnalytics.Api.Encoding.PresetsEnabledKeyDecoder, Sitecore.ExperienceAnalytics.Api">
                            <param desc="hashMampping"
                                   type="Sitecore.ExperienceAnalytics.Api.Encoding.HashMapper, Sitecore.ExperienceAnalytics.Api">
                                <param desc="keysProvider"
                                       type="Sitecore.ExperienceAnalytics.Api.Encoding.InMemoryPresetKeysProvider, Sitecore.ExperienceAnalytics.Api" />
                                <param desc="encoder" ref="experienceAnalytics/client/services/encoder" />
                            </param>
                            <param desc="decoder"
                                   type="Sitecore.ExperienceAnalytics.Api.Encoding.DatabaseKeyDecoder, Sitecore.ExperienceAnalytics.Api">
                                <param desc="keysReader" ref="experienceAnalytics/client/services/hashKeysProvider" />
                            </param>
                        </param>
                    </keyCodec>

                    <!-- hashKeysProvider is responsible for hash of entities stored in database. -->
                    <hashKeysProvider
                        type="Sitecore.ExperienceAnalytics.Core.Repositories.CachedReaderDecorator`2[[System.String], [System.String]], Sitecore.ExperienceAnalytics.Core">
                        <param
                            type="Sitecore.ExperienceAnalytics.Core.Repositories.DimensionKeyRemoteReader, Sitecore.ExperienceAnalytics.Core">
                            <param
                                type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client"
                                factoryMethod="GetLazyReportingDataProvider" />
                            <param desc="reportingDataSourceName">reporting</param>
                            <param desc="logger" ref="experienceAnalytics/client/logger" />
                        </param>
                        <param desc="cacheName">ExperienceAnalytics.DimensionKeys</param>
                        <param desc="cacheMaxSize">52428800</param>
                        <param desc="cacheExpiration">365:00:00:00</param>
                        <param desc="useSlidingCacheExpiration">true</param>
                        <param desc="logger" ref="experienceAnalytics/client/logger" />
                    </hashKeysProvider>
                </services>
            </client>
        </experienceAnalytics>
        <pipelines>
            <initialize>
                <!-- One-time run code that synchronizes a segment if it's workflow state is 'Deployed' but non-existent in db, with DeployDate = UTC.NOW -->
                <processor
                    type="Sitecore.ExperienceAnalytics.Client.Deployment.SyncSegmentsProcessor, Sitecore.ExperienceAnalytics.Client"
                    patch:after="processor[position()=last()]">
                    <param ref="experienceAnalytics/client/logger" />
                    <param
                        type="Sitecore.ExperienceAnalytics.Client.Deployment.SyncSegmentsManager, Sitecore.ExperienceAnalytics.Client">
                        <param ref="experienceAnalytics/client/logger" />
                        <param
                            type="Sitecore.ExperienceAnalytics.Client.Deployment.DeploySegmentDefinitionProcessor, Sitecore.ExperienceAnalytics.Client">
                            <param ref="experienceAnalytics/client/logger" />
                            <param type="Sitecore.ExperienceAnalytics.Core.Repositories.ReferenceData.ReferenceDataSegmentStore, Sitecore.ExperienceAnalytics.Core">
                            </param>
                        </param>
                    </param>
                </processor>
            </initialize>
            <httpRequestBegin>
                <processor
                    type="Sitecore.ExperienceAnalytics.Client.Pipelines.HttpRequest.RedirectRequest, Sitecore.ExperienceAnalytics.Client"
                    patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']">
                    <param ref="experienceAnalytics/client/services/requestRedirection" />
                </processor>
            </httpRequestBegin>
        </pipelines>
        <settings>
            <!-- EXPERIENCE ANALYTICS - DEFAULT DATE RANGE OFFSET - FROM
           The default offset (in days) that is used in a date range filter for the 'from date'.
           Default value: -90
        -->
            <setting name="ExperienceAnalytics.DefaultDateRangeOffset.From" value="-90" />

            <!-- EXPERIENCE ANALYTICS - DEFAULT DATE RANGE OFFSET - TO
           The default offset (in days) that is used in a date range filter for the 'to date'.
           Default value: -1
        -->
            <setting name="ExperienceAnalytics.DefaultDateRangeOffset.To" value="-1" />
        </settings>
        <events>
            <event name="item:saved">
                <handler type="Sitecore.ExperienceAnalytics.Client.Deployment.Events.SegmentDeployedEventHandler, Sitecore.ExperienceAnalytics.Client" method="OnItemSaved">
                    <param
                        type="Sitecore.ExperienceAnalytics.Client.Deployment.DeploySegmentDefinitionProcessor, Sitecore.ExperienceAnalytics.Client">
                        <param ref="experienceAnalytics/client/logger" />
                        <param type="Sitecore.ExperienceAnalytics.Core.Repositories.ReferenceData.ReferenceDataSegmentStore, Sitecore.ExperienceAnalytics.Core">
                        </param>
                    </param>
                </handler>
            </event>
        </events>
    </sitecore>
</configuration>